buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url = "https://packages.confluent.io/maven/"
        }
        maven {
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
    }
}

plugins {
    id "java"
    id "com.google.cloud.tools.jib" version "3.3.1"
    id "idea"
    id "eclipse"
    id "com.github.imflog.kafka-schema-registry-gradle-plugin" version "1.13.0"
    id "com.google.protobuf" version "0.9.2"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
version = "0.0.1"

repositories {
    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

apply plugin: "com.github.johnrengelman.shadow"

dependencies {
    implementation "org.slf4j:slf4j-simple:2.0.7"
    implementation "org.apache.kafka:kafka-clients:3.6.0"
    implementation 'org.apache.kafka:kafka-streams:3.6.0'
    implementation 'com.google.protobuf:protobuf-java:3.22.2'
    implementation "io.confluent:kafka-protobuf-serializer:7.5.1"
    implementation "io.confluent:kafka-protobuf-provider:7.5.1"
    testImplementation 'com.google.guava:guava:31.1-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

protobuf {
    generatedFilesBaseDir = "${project.buildDir}/generated-main-proto-java"

    protoc {
        artifact = 'com.google.protobuf:protoc:3.22.2'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
        exceptionFormat = "full"
    }
}

jar {
  manifest {
    attributes(
      "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
      "Main-Class": "io.confluent.developer.MultiEventProtobufProduceConsumeApp"
    )
  }
}

shadowJar {
    archiveBaseName = "multiple-event-types-protobuf-standalone"
    archiveClassifier = ''
}
